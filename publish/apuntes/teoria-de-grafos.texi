\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename ../publish/apuntes/teoria-de-grafos.info
@settitle Teoría de grafos
@documentencoding UTF-8
@documentlanguage es
@c %**end of header

@finalout
@titlepage
@title Teoría de grafos
@subtitle Apuntes
@author Galindo
@end titlepage

@ifnottex
@node Top
@top Teoría de grafos
@end ifnottex

@menu
* Grafos y Multigrafos::
* Grado de un véritce::
* Grafos isomorfos::
* Grafos homeomorfos::
* Caminos y conectividad::
* Distancia y diámetro::
* Grafos completos::
* Grafos Hamiltonianos en grafos completos::
* Representación de grafos ponderados con matrices de adyadencia::
* Ejecución del algoritmo del vecino más próximo::
* Árboles::
* Bosques::
* Árbol de expansión::
* Algoritmo de expancion minima (Kruskal)::
* Algoritmo de Kurskal inverso::
* Ejemplo de la ejecución del algoritmo::

@detailmenu
--- The Detailed Node Listing ---

Grafos Hamiltonianos en grafos completos

* Teorema:: Teorema. 

@end detailmenu
@end menu

@node Grafos y Multigrafos
@chapter Grafos y Multigrafos

Un grafo G consta de dos partes: Un conjunto V cuyos elementos se denominan vértices y un conjunto E de pares no ordenados de vértices distintos llamados aristas de G. 

La definición formal de un grafo no permite aristas multiples ni lazos, por lo tanto un grafo se define como un multigrafo sin aristas multiples ni lazos. Ejemplos: @*

@DEMONSTRATION
Si G1(V,E) es el grafo del inciso a), entonces: @*
V=@{A,B,C,D@} y E=@{@{A,B@},@{B,C@},@{C,D@},@{A,C@},@{B,D@}@}

Si G2(V,E) es el multigrafo del inciso b), entonces: @*
V=@{A,B,C,D@} y E=@{@{A,C@},@{B,D@},@{A,D@},@{B,C@},@{B,C@} ,@{D,D@}@}

@image{./img/28,,,,png}
@end DEMONSTRATION

@node Grado de un véritce
@chapter Grado de un véritce

El grado de un vértice v en un grafo G, se escribe grd(v), es igual al número de aristas en G que contienen a v.
Teorema: La suma de los grados de los vertices de un graf G es igual el doble del número de aristas n en G. Ejemplos:


@DEMONSTRATION
Si G1(V,E) es el grafo del inciso a),  n=5: @*
V=@{A,B,C,D@} y E=@{@{A,B@},@{B,C@},@{C,D@},@{A,C@},@{B,D@}@} @*
grd(A)=2, grd(B)=3, grd(C)=3, grd(D)=2 @*
2+3+3+2=10 @*

Si G2(V,E) es el multigrafo del inciso b), n=6: @*
V=@{A,B,C,D@} y E=@{@{A,C@},@{B,D@},@{A,D@},@{B,C@},@{B,C@} ,@{D,D@}@} @*
grd(A)=2, grd(B)=3, grd(C)=3, grd(D)=4 @*
2+3+3+4=12 @*

@image{./img/28,,,,png} 
@end DEMONSTRATION

@node Grafos isomorfos
@chapter Grafos isomorfos

Los grafos G y G* son isomorfos si existe una correspondencia f:V->V* tal que @{u,v@} es una arista de G si y solo si @{f(u),f(v)@} es una arista de G*.

Ejemplos: Si llamamos a cada uno de los grafos siguientes A, F, K, @dots{} podemos encontrar varios pares de grados isomorfos.

@DEMONSTRATION
@image{./img/29,,,,png}

@itemize
@item
A y R son isomorfos
@item
K y X son isomorfos
@item
M, V, S y Z son isomorfos
@end itemize
@end DEMONSTRATION

@node Grafos homeomorfos
@chapter Grafos homeomorfos

Dado cualquier grafo G, es posible obtener un Nuevo grafo al dividir una arista de G con vertices adicionales. Dos grafos son homeomorfos si es possible obtenerlos a partir del mismo grafo o grafos isomorfos al aplicar este método.

Ejemplos: Los grafos de los incisos a) y b) son homeomorfos puesto que pueden obtenerse a partir del grafo c) al agregar vertices adicionales

@DEMONSTRATION
@image{./img/30,,,,png}
@end DEMONSTRATION

@node Caminos y conectividad
@chapter Caminos y conectividad

Un camino en un mutigrafo G consta de una secuencia alternada de vertices y aristas de la forma:

@DEMONSTRATION
@image{./img/31,,,,png}


@table @asis
@item Recorrido
es un camino sin aristas repetidas.
@item Cerrado
es un camino cuyo vértice inicial y final coinciden.
@item Abierto
es un camino cuyo vértice inicial y final no coinciden.
@item Ciclo
es un camino simple que además es un camino cerrado.
@item Simple
es un camino sin vértices repetidos, salvo quizás el primero y el último.
@item ciclo hamiltoniano
es un ciclo que pasa por todos los vértices del grafo una única vez (en caso que el vértice inicial y final no coinciden, se suele hablar también de camino hamiltoniano).
@item Ciclo Euleriano
es un ciclo que pasa por todas las aristas del grafo una única vez.
@end table
@end DEMONSTRATION

@node Distancia y diámetro
@chapter Distancia y diámetro

Considere un grafo conexo G, la distancia entre los vertices u y v en G, que se es escribe d(u,v), es la longitude de la ruta más corta entre u y v.

El diámetro de G diam(G) es la distancia máxima entre dos puntos cualesquiera de G.

@node Grafos completos
@chapter Grafos completos

Un grafo G es completo si cualquier vértice G está unido a todos los demás vértices en G. Por tanto, un grafo completo G debe ser conexo. El grafo completo con n vértices se denomina K@math{_n}.

@DEMONSTRATION


@image{./img/32,,,,png}
@end DEMONSTRATION

@node Grafos Hamiltonianos en grafos completos
@chapter Grafos Hamiltonianos en grafos completos

Si un grafo G admite un circuito hamiltoniano, entonces G se denomina grafo hamiltoniano. Un circuito hamiltoniano en un grafo G es un camino cerrado que visita todos los vértices en G exactamente una vez
aunque puede repetir aristas.

@menu
* Teorema:: Teorema. 
@end menu

@node Teorema
@section Teorema:

Un grafo completo K n con n>=3 vértices tiene circuitos hamiltonianos, donde n es el número de vértices del grafo K y no se distingue entre un circuito y su opuesto (es decir, si se invierte el sentido del circuito es el mismo).

@node Representación de grafos ponderados con matrices de adyadencia
@chapter Representación de grafos ponderados con matrices de adyadencia

@itemize
@item
Las matrices de adyacencia representan las conexiones entre nodos de un grafo G.

@item
Si un grafo es @strong{no ponderado}, cada elemento de la matriz tendrá un 1 si la conexión entre nodos existe y un 0 en caso contrario.

@item
Si un grafo es @strong{ponderado}, cada elemento de la matriz tendrá el peso de la arista si la conexión existe, y se deja vacío si la conexión no existe. Ejemplo:
@end itemize

@DEMONSTRATION


@image{./img/33,,,,png}

@multitable {a} {a} {a} {a} {a}
@headitem #
@tab A
@tab B
@tab C
@tab D
@item A
@tab ∞
@tab 3
@tab 2
@tab 7
@item B
@tab 3
@tab ∞
@tab 5
@tab 9
@item C
@tab 2
@tab 5
@tab ∞
@tab 6
@item D
@tab 7
@tab 9
@tab 6
@tab ∞
@end multitable
@end DEMONSTRATION

@node Ejecución del algoritmo del vecino más próximo
@chapter Ejecución del algoritmo del vecino más próximo

Este método genera rápidamente un camino Hamiltoniano de peso minimo pero no ideal.

@enumerate
@item
elección de un vértice arbitrario respecto al vértice actual.
@item
descubra la arista de menor peso que ya este conectada al vértice actual y a un vértice no visitado V.
@item
convierta el vértice actual en V.
@item
marque V como visitado.
@item
si todos los vértices del dominio estuvieran visitados, cierre el algoritmo.
@item
vaya al paso 2.
@end enumerate

@node Árboles
@chapter Árboles

El árbol es un grafo no dirigido conectado con circuitos no simples; además, no contiene arcos múltiples, con la propiedad de que hay un único camino simple entre cada par de vértices, teniendo el siguiente teorema:

@quotation
“Un grafo no dirigido es un árbol si y solo si hay un camino simple único entre cualesquiera dos de sus vértices”.
@end quotation

@float Figura
@image{./img/34,,,,png}
@caption{Grafo 1, 2 y 3.}
@end float

Si se observan los siguientes grafos, se concluye que el grafo G@math{_1} no es un árbol porque se observa un circuito simple, pero los grafos G@math{_2} Y G@math{_3}  son de árboles, porque están conectados con circuitos no simples.

@node Bosques
@chapter Bosques

existen grafos que no tienen conexión y podría existir confusión el pensar que un árbol es un grafo conectado que tiene circuitos no simples, pero es importante mencionar que existen árboles del tipo que contienen circuitos no simples que no necesariamente están conectados, y esos árboles reciben el nombre de bosques, cuya característica es que cada uno de sus componentes conectados es un árbol.

@float Figura
@image{./img/35,,,,png}
@caption{Bosques 1 y 2.}
@end float

@uref{https://sites.google.com/site/discretas27/unidad-6-arboles, Más informacion sobre arboles}

@node Árbol de expansión
@chapter Árbol de expansión

un subgrafo se le concidera un arbol de expancion (T) de un grafo (G) si T incluye todos los vertices de G.

@image{./img/36,,,,png}

@node Algoritmo de expancion minima (Kruskal)
@chapter Algoritmo de expancion minima (Kruskal)

@enumerate
@item
Las aristas de G se disponen en orden creciente de peso.
@item
Se empieza sślo como los vértices de G y en forma secuencial se agrega cada artista que no origine un ciclo hasta que se haya agregado n-1.
@item
Salir.
@end enumerate

@node Algoritmo de Kurskal inverso
@chapter Algoritmo de Kurskal inverso

@enumerate
@item
Las aristas de G se disponen en orden decreciente de peso.
@item
Se procede secuecialmente para eliminar cada arista que no haga inconexo al grafo, hasta que queden n-1 aristas.
@item
Salir.
@end enumerate

@node Ejemplo de la ejecución del algoritmo
@chapter Ejemplo de la ejecución del algoritmo

@bye