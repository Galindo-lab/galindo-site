#+TITLE: Estructura del sitio
#+SUBTITLE: Emacs

#+OPTIONS: html-style:nil 
#+OPTIONS: html-scripts:nil
#+OPTIONS: num:nil 
#+OPTIONS: toc:nil

#+HTML_HEAD:<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
#+HTML_HEAD: <script defer type="text/javascript" src="../script.js"></script>

#+BEGIN_EXPORT html

<div id="google_translate_element"></div>
<script defer> 
function googleTranslateElementInit() {

new google.translate.TranslateElement({

pageLanguage: 'es'

}, 'google_translate_element');

}
</script>

#+END_EXPORT


#+BEGIN_nav
- [[[../index.html][Index]]]
- [[[../settings.html][Settings]]]
- [[[../about.html][About]]]
#+END_nav

* ORG-anizando el sitio
** ¿Cómo funciona este sitio?
neocitys no permite paginas web dinamicas, así que tengo que buscar soluciones mas creativas para poder evadir escata limintacion. Para crear el html de mi sitio pense en un generador estatico de paginas, pero luego pense en una mejor alternatica [[https://orgmode.org/][ORG-mode]] ( ó mejor GOD-MODE? XD ), org tiene la funcionalidad de exportar a Latex y a html los detalles los trato en la siguiente secion [[Configurando Org-mode]]. Diagrama del sitio

#+BEGIN_SRC 
Root
 ├─── ./root
 │     │
 │     ├─── index.html
 │     ├─── about.html
 │     └─── 404.html
 │
 ├── Bitacora
 │     │
 │     ├─── 
 │     └─── 
 │
 ├─── Apuntes
 │
 ├─── Matematicas   
 │ 
 └─── estructura
#+END_SRC

** Configurando Org-mode
ORG tiene unos defaults bastante buenos para html, sí lo que pretendes es hacer que tus paginas se parescan a un documento hecho en \LaTeX, para los fines que estoy tratando de lograr los defaults de ORG no me sirven, así que hago unas pequeñas configuraciones:

#+BEGIN_EXAMPLE exports: none
#+TITLE: Recomendaciones de software
#+SUBTITLE: [[http://galindo-lab.neocities.org][galindo-lab.neocities.org]]
#+LANGUAGE: es
#+OPTIONS: html-style:nil html-scripts:nil num:nil html-postamble:nil
#+END_EXAMPLE

Las primera linea es muy clara, Titulo del archivo, el subtitulo es un link a index.html de esta pagina y la tercera es el lenguaje de la pagina, la tercera linea son las opciones de exportacion:

- html-style:nil -> Desactiva la hoja de css por defecto. 
- html-scripts:nil -> Desactiva el javascript por defecto.
- num:nil -> desactiva los numeros de la tabla de contenidos y de los titulos.
- html-postamble:nil -> desactiva la informacion al final de la pagina

ahora el html que genera ORG es muchisimo mas limpio y minimalista ( no lo volvi a revisar, pero yo recuerdo que paso de 300 lineas a solo 150 de código generado ), añadire mi propio css personalizado y ajustare el viewport de mi pagina web para moviles:

#+BEGIN_SRC html
#+HTML_HEAD: <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style1.css" />
#+END_SRC

sí conoces algo de html puedes entender perfectamente que hacen estas lineas, la primera ajusta el viewport de la pagina y la segunda añade la hoja de estilos a el archivo exportado, no se va a copiar y pegar en el archivo solamente hara referencia al archivo por lo que tendremos que poner el .css en el mismo directorio del css generado. Y eso es todo como se puede ver es muy sencillo como generar paginas web como esta, una cosa que siempre tomo en cuenta para simplificar mi trabajo es no añadir tanto html personalizado en el export de ORG, ya que esto hace mas dificil actualizar las paginas, ORG genera los nombres de las clases y id de cada elemento en la pagina por lo que puedo usar el mismo styles.css para todos mis archivos generados con org y esta 100% asegurado que se verán igual.

* Administracion del sitio
** Backups
Solo tengo un repositorio de git donde subo las copias de los archivos. No guardo los archivos html que genera org. 

