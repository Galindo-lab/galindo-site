<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="es" xml:lang="es">
<head>
<!-- 2022-07-01 vie 17:21 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Preview html desde otro dispositivo</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Galindo" />
<link rel="stylesheet" type="text/css" href="https://galindosoft.neocities.org/styles/style.css" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="theme-color" content="#000000" />
<link rel="icon" type="image/x-icon" href="https://galindosoft.neocities.org/logo.png" />
</head>
<body>
<div id="content">

<div id="outline-container-org336f734" class="outline-2">
<h2 id="org336f734">Como crear un servidor de prueba</h2>
<div class="outline-text-2" id="text-org336f734">
<p>
python3 viene con un servidor http para hacer pruebas en localhost, así puedes probar tus paginas sin el problema de que no carguen los recursos nuevos. Para inicializarlo solo navegamos hasta el directorio en el que se encuentre nuestro dispositivo y escribimos el siguiente comando en la terminal, ojo que yo estoy trabajando desde linux:
</p>

<pre class="example">
python3 -m http.server 8080
</pre>
</div>
</div>

<div id="outline-container-org1cdbca0" class="outline-2">
<h2 id="org1cdbca0">Preview en otro dispositivo</h2>
<div class="outline-text-2" id="text-org1cdbca0">
<p>
Ahora nuestro dispositivo esta compartiendo nuestra pagina por el puerto 8080, para acceder a nuestra pagina necesitamos el ip de nuestro dispositivo (ó también aparece con el nombre ipv4), explora el apartado de wifi y debería aparecer, sí estas en Linux, ú otro sistema operativo Unix like, una forma mas rápida de obtenerlo es con el siguiente comando:
</p>

<pre class="example">
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
</pre>

<p>
ese numero es la "url" a nuestro dispositivo (ojo que es solo en la red local, ambos dispositivos tienen que estar conectados a la misma red para que nuestra pagina sea visible en ambos dispositivos), como la dirección de nuestra pagina web, solo tenemos que especificar el nombre de nuestro archivo al final del la url, así se debería ver <a href="http://192.168.1.70:8080/index.html">http://192.168.1.70:8080/index.html</a>, y eso es todo, podemos tener la cantidad de dispositivos que queramos esto es muy útil para probar como se controla una pagina web adaptativa, por ultimo dejo un script para automatizar este proceso:
</p>

<pre class="example">
nombre="calculadora.html"
port=8080
printf "http://$( ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' ):%d/%s" $port $nombre
python3 -m http.server 8080
</pre>
</div>
</div>
</div>
</body>
</html>
